name: Create Azure Resources for Terraform

on:
  workflow_dispatch:

jobs:
  create-resources:
    runs-on: ubuntu-latest

    steps:
    # - name: Checkout repository
    #   uses: actions/checkout@v3

    # - name: Setup Azure PowerShell
    #   uses: azure/powershell@v1
    #   with:
    #     azPSVersion: 'latest'

    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true        

    # - name: Login to Azure
    #   run: |
    #     az login --service-principal \
    #       --username ${{ secrets.AZURE_CLIENT_ID }} \
    #       --password ${{ secrets.AZURE_CLIENT_SECRET }} \
    #       --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Create an RG and SA
      uses: azure/powershell@v1
      with:
        inlineScript: |
          $RESOURCE_GROUP_NAME = "${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}"
          $STORAGE_ACCOUNT_NAME = "${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}"
          $CONTAINER_NAME = "${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}"

          if (-Not (Get-AzResourceGroup -Name $RESOURCE_GROUP_NAME -ErrorAction SilentlyContinue)) {
            New-AzResourceGroup -Name $RESOURCE_GROUP_NAME -Location westeurope
          }

          $storageAccount = New-AzStorageAccount -ResourceGroupName $RESOURCE_GROUP_NAME `
                                                 -Name $STORAGE_ACCOUNT_NAME `
                                                 -SkuName Standard_LRS `
                                                 -Kind StorageV2 `
                                                 -Location westeurope `
                                                 -AccessTier Cool `
                                                 -AllowBlobPublicAccess $false

          New-AzStorageContainer -Name $CONTAINER_NAME -Context $storageAccount.Context
        azPSVersion: "latest"    

    # - name: Run PowerShell script
    #   run: |
    #     $RESOURCE_GROUP_NAME = "${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}"
    #     $STORAGE_ACCOUNT_NAME = "${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}"
    #     $CONTAINER_NAME = "${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}"

    #     if (-Not (Get-AzResourceGroup -Name $RESOURCE_GROUP_NAME -ErrorAction SilentlyContinue)) {
    #       New-AzResourceGroup -Name $RESOURCE_GROUP_NAME -Location westeurope
    #     }

    #     $storageAccount = New-AzStorageAccount -ResourceGroupName $RESOURCE_GROUP_NAME `
    #                                            -Name $STORAGE_ACCOUNT_NAME `
    #                                            -SkuName Standard_LRS `
    #                                            -Kind StorageV2 `
    #                                            -Location westeurope `
    #                                            -AccessTier Cool `
    #                                            -AllowBlobPublicAccess $false

    #     New-AzStorageContainer -Name $CONTAINER_NAME -Context $storageAccount.Context
    #   shell: pwsh
